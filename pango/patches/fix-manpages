add whatis entries to man pages

Upstream Bug Report: http://bugzilla.gnome.org/show_bug.cgi?id=593289

--- a/xs/PangoAttributes.xs
+++ b/xs/PangoAttributes.xs
@@ -295,6 +295,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::Color	PREFIX = pango_color_
 
+=for object Pango::Color - an object to represent a color for Pango
+
+=cut
+
 BOOT:
 	PERL_UNUSED_VAR (file);
 	pango_color_wrapper_class.wrap = pango_color_wrap;
@@ -341,6 +345,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::Attribute	PREFIX = pango_attribute_
 
+=for object Pango::Attribute - Pango base class for attributes
+
+=cut
+
 BOOT:
 	default_wrapper_class = gperl_default_boxed_wrapper_class ();
 	gtk2perl_pango_attribute_wrapper_class = * default_wrapper_class;
@@ -373,6 +381,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrString
 
+=for object Pango::AttrString - used to represent attributes with a string value
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrString", "Pango::Attribute");
 
@@ -393,6 +405,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrInt
 
+=for object Pango::AttrInt - structure used to represent attributes with an integer value
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrInt", "Pango::Attribute");
 
@@ -409,6 +425,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrColor
 
+=for object Pango::AttrColor - Pango color attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrColor", "Pango::Attribute");
 
@@ -437,6 +457,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrLanguage	PREFIX = pango_attr_language_
 
+=for object Pango::AttrLanguage - used to represent attributes that are languages
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrLanguage", "Pango::Attribute");
 
@@ -466,6 +490,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrFamily	PREFIX = pango_attr_family_
 
+=for object Pango::AttrFamily - Pango attribute family
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrFamily", "Pango::AttrString");
 
@@ -479,6 +507,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrForeground	PREFIX = pango_attr_foreground_
 
+=for object Pango::AttrForeground - Pango foreground attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrForeground", "Pango::AttrColor");
 
@@ -492,6 +524,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrBackground	PREFIX = pango_attr_background_
 
+=for object Pango::AttrBackground - Pango background color attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrBackground", "Pango::AttrColor");
 
@@ -505,6 +541,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrSize	PREFIX = pango_attr_size_
 
+=for object Pango::AttrSize - Pango font-size attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrSize", "Pango::AttrInt");
 
@@ -532,6 +572,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrStyle	PREFIX = pango_attr_style_
 
+=for object Pango::AttrStyle - Pango font slant style attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrStyle", "Pango::Attribute");
 
@@ -554,6 +598,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrWeight	PREFIX = pango_attr_weight_
 
+=for object Pango::AttrWeight - Pango font weight attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrWeight", "Pango::Attribute");
 
@@ -576,6 +624,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrVariant	PREFIX = pango_attr_variant_
 
+=for object Pango::AttrVariant - Pango font variant attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrVariant", "Pango::Attribute");
 
@@ -598,6 +650,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrStretch	PREFIX = pango_attr_stretch_
 
+=for object Pango::AttrStretch - Pango font stretch attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrStretch", "Pango::Attribute");
 
@@ -620,6 +676,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrUnderline	PREFIX = pango_attr_underline_
 
+=for object Pango::AttrUnderline - Pango underline style attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrUnderline", "Pango::Attribute");
 
@@ -642,6 +702,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrStrikethrough	PREFIX = pango_attr_strikethrough_
 
+=for object Pango::AttrStrikethrough - Pango strike-through attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrStrikethrough", "Pango::Attribute");
 
@@ -664,6 +728,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrFontDesc	PREFIX = pango_attr_font_desc_
 
+=for object Pango::AttrFontDesc - Pango description of a font
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrFontDesc", "Pango::Attribute");
 
@@ -690,6 +758,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrScale	PREFIX = pango_attr_scale_
 
+=for object Pango::AttrScale - Pango font size scale attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrScale", "Pango::Attribute");
 
@@ -712,6 +784,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrRise	PREFIX = pango_attr_rise_
 
+=for object Pango::AttrRise - Pango baseline displacement attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrRise", "Pango::AttrInt");
 
@@ -725,6 +801,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrShape	PREFIX = pango_attr_shape_
 
+=for object Pango::AttrShape - Pango shape attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrShape", "Pango::Attribute");
 
@@ -762,6 +842,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrFallback	PREFIX = pango_attr_fallback_
 
+=for object Pango::AttrFallback - Pango fallback attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrFallback", "Pango::Attribute");
 
@@ -788,6 +872,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrLetterSpacing	PREFIX = pango_attr_letter_spacing_
 
+=for object Pango::AttrLetterSpacing - Pango letter spacing attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrLetterSpacing", "Pango::AttrInt");
 
@@ -805,6 +893,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrUnderlineColor	PREFIX = pango_attr_underline_color_
 
+=for object Pango::AttrUnderlineColor - Pango underline color attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrUnderlineColor", "Pango::AttrColor");
 
@@ -822,6 +914,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrStrikethroughColor	PREFIX = pango_attr_strikethrough_color_
 
+=for object Pango::AttrStrikethroughColor - Pango color strikethrough color attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrStrikethroughColor", "Pango::AttrColor");
 
@@ -839,6 +935,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrGravity	PREFIX = pango_attr_gravity_
 
+=for object Pango::AttrGravity - Pango gravity attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrGravity", "Pango::Attribute");
 
@@ -859,6 +959,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrGravityHint	PREFIX = pango_attr_gravity_hint_
 
+=for object Pango::AttrGravityHint - Pango gravity hint attribute
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::AttrGravityHint", "Pango::Attribute");
 
@@ -883,6 +987,7 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrList	PREFIX = pango_attr_list_
 
+
 =for position DESCRIPTION
 
 =head1 DESCRIPTION
@@ -936,6 +1041,10 @@
 
 MODULE = Pango::Attributes	PACKAGE = Pango::AttrIterator	PREFIX = pango_attr_iterator_
 
+=for object Pango::AttrIterator - used to represent iterators through Pango::AttrLists
+
+=cut
+
 void pango_attr_iterator_range (PangoAttrIterator *iterator, OUTLIST gint start, OUTLIST gint end);
 
 gboolean pango_attr_iterator_next (PangoAttrIterator *iterator);
@@ -984,7 +1093,8 @@
 MODULE = Pango::Attributes	PACKAGE = Pango	PREFIX = pango_
 
 # don't clobber the pod for Pango!
-=for object Pango::AttrList
+=for object Pango::AttrList - holds attributes that apply to a section of text
+
 =cut
 
 ##gboolean pango_parse_markup (const char                 *markup_text,
--- a/xs/PangoCairo.xs
+++ b/xs/PangoCairo.xs
@@ -49,6 +49,10 @@
 
 MODULE = Pango::Cairo	PACKAGE = Pango::Cairo::FontMap	PREFIX = pango_cairo_font_map_
 
+=for object Pango::Cairo::FontMap - Pango font maps with Cairo
+
+=cut
+
 # PangoFontMap *pango_cairo_font_map_new (void);
 PangoFontMap_noinc * pango_cairo_font_map_new (class)
     C_ARGS:
@@ -94,6 +98,10 @@
 
 MODULE = Pango::Cairo	PACKAGE = Pango::Cairo::Font	PREFIX = pango_cairo_font_
 
+=for object Pango::Cairo::Font - Pango using cairo fonts for rendering
+
+=cut
+
 #if PANGO_CHECK_VERSION (1, 18, 0)
 
 cairo_scaled_font_t *pango_cairo_font_get_scaled_font (PangoCairoFont *font);
@@ -104,6 +112,10 @@
 
 MODULE = Pango::Cairo	PACKAGE = Pango::Cairo	PREFIX = pango_cairo_
 
+=for object Pango::Cairo - Pango rendering with the Cairo backend
+
+=cut
+
 =for position DESCRIPTION
 I<Pango::Cairo> contains a few functions that help integrate pango and
 cairo.  Since they aren't methods of a particular object, they are bound as
@@ -162,6 +174,10 @@
 
 MODULE = Pango::Cairo	PACKAGE = Pango::Cairo::Context	PREFIX = pango_cairo_context_
 
+=for object Pango::Cairo::Context - Using Cairo contexts with pango
+
+=cut
+
 BOOT:
 	gperl_set_isa ("Pango::Cairo::Context", "Pango::Context");
 
--- a/xs/PangoContext.xs
+++ b/xs/PangoContext.xs
@@ -21,6 +21,10 @@
 
 MODULE = Pango::Context	PACKAGE = Pango::Context	PREFIX = pango_context_
 
+=for object Pango::Context - Pango object that stores global information used to control the itemization process
+
+=cut
+
  ## applications have no cause to use pango_context_new() -- it is intended
  ## to be used by backends.  i seriously doubt anyone would want to write a
  ## pango backend in Perl, unless they want something that's really slow.
--- a/xs/PangoFont.xs
+++ b/xs/PangoFont.xs
@@ -21,9 +21,6 @@
 
 MODULE = Pango::Font	PACKAGE = Pango
 
-=for object Pango::FontDescription
-=cut
-
 ### some constants...
 double
 scale (class)
@@ -64,6 +61,10 @@
 
 MODULE = Pango::Font	PACKAGE = Pango::FontDescription	PREFIX = pango_font_description_
 
+=for object Pango::FontDescription - Pango object to represent a description of a font
+
+=cut
+
 ##PangoFontDescription* pango_font_description_new (void)
 PangoFontDescription_own *
 pango_font_description_new (class)
@@ -229,6 +230,10 @@
 
 MODULE = Pango::Font	PACKAGE = Pango::FontMetrics	PREFIX = pango_font_metrics_
 
+=for object Pango::FontMetrics - object for Pango containing overall metric information for a font
+
+=cut
+
 # should happen automagicly
 ## void pango_font_metrics_unref (PangoFontMetrics *metrics)
 
@@ -278,6 +283,10 @@
 
 MODULE = Pango::Font	PACKAGE = Pango::FontFamily	PREFIX = pango_font_family_
 
+=for object Pango::FontFamily - Pango object representing a family of related font faces
+
+=cut
+
 BOOT:
 	gperl_object_set_no_warn_unreg_subclass (PANGO_TYPE_FONT_FAMILY, TRUE);
 
@@ -314,6 +323,10 @@
 
 MODULE = Pango::Font	PACKAGE = Pango::FontFace	PREFIX = pango_font_face_
 
+=for object Pango::FontFace - object for Pango representing a group of fonts varying only in size
+
+=cut
+
 #
 # PangoFontFace
 #
@@ -358,6 +371,10 @@
 
 MODULE = Pango::Font	PACKAGE = Pango::Font	PREFIX = pango_font_
 
+=for object Pango::Font - a rendering-system independent font representation
+
+=cut
+
 ## PangoFontMetrics * pango_font_get_metrics (PangoFont *font, PangoLanguage *language)
 PangoFontMetrics *
 pango_font_get_metrics (font, language)
--- a/xs/PangoFontMap.xs
+++ b/xs/PangoFontMap.xs
@@ -21,6 +21,10 @@
 
 MODULE = Pango::FontMap	PACKAGE = Pango::FontMap	PREFIX = pango_font_map_
 
+=for object Pango::FontMap - an object that represents the set of fonts available for a particular rendering system
+
+=cut
+
 ##  PangoFont * pango_font_map_load_font (PangoFontMap *fontmap, PangoContext *context, const PangoFontDescription *desc)
 PangoFont_ornull *
 pango_font_map_load_font (fontmap, context, desc)
--- a/xs/PangoFontset.xs
+++ b/xs/PangoFontset.xs
@@ -36,6 +36,10 @@
 
 MODULE = Pango::Fontset	PACKAGE = Pango::Fontset	PREFIX = pango_fontset_
 
+=for object Pango::Fontset - object containing a set of Pango::Font objects
+
+=cut
+
 BOOT:
 	gperl_object_set_no_warn_unreg_subclass (PANGO_TYPE_FONTSET, TRUE);
 
--- a/xs/PangoGravity.xs
+++ b/xs/PangoGravity.xs
@@ -21,6 +21,10 @@
 
 MODULE = Pango::Gravity	PACKAGE = Pango::Gravity	PREFIX = pango_gravity_
 
+=for object Pango::Gravity - represents the orientation of glyphs in a segment of text
+
+=cut
+
 =for apidoc __function__
 =cut
 gboolean
--- a/xs/PangoLayout.xs
+++ b/xs/PangoLayout.xs
@@ -169,6 +169,10 @@
 
 MODULE = Pango::Layout	PACKAGE = Pango::Layout	PREFIX = pango_layout_
 
+=for object Pango::Layout - an object representing a paragraph of text with attributes
+
+=cut
+
 ##  PangoLayout *pango_layout_new (PangoContext *context) 
 PangoLayout_noinc *
 pango_layout_new (class, context)
@@ -532,6 +536,10 @@
 
 MODULE = Pango::Layout	PACKAGE = Pango::LayoutLine	PREFIX = pango_layout_line_
 
+=for object Pango::LayoutLine - a line in a Pango::Layout
+
+=cut
+
 ##  gboolean pango_layout_line_x_to_index (PangoLayoutLine *line, int x_pos, int *index_, int *trailing)
 void
 pango_layout_line_x_to_index (PangoLayoutLine *line, int x_pos)
@@ -603,6 +611,10 @@
 
 MODULE = Pango::Layout	PACKAGE = Pango::LayoutIter	PREFIX = pango_layout_iter_
 
+=for object Pango::LayoutIter - an object used to iterate over the visual extents of a Pango::Layout
+
+=cut
+
 ##  void pango_layout_iter_free (PangoLayoutIter *iter) 
 
 ##  int pango_layout_iter_get_index (PangoLayoutIter *iter) 
--- a/xs/PangoTabs.xs
+++ b/xs/PangoTabs.xs
@@ -7,6 +7,10 @@
 
 MODULE = Pango::TabArray	PACKAGE = Pango::TabArray	PREFIX = pango_tab_array_
 
+=for object Pango::TabArray - an object containing an array of tab stops
+
+=cut
+
 ##  PangoTabArray *pango_tab_array_new (gint initial_size, gboolean positions_in_pixels) 
 ###  PangoTabArray *pango_tab_array_new_with_positions (gint size, gboolean positions_in_pixels, PangoTabAlign first_alignment, gint first_position, ...) 
 
--- a/xs/PangoRenderer.xs
+++ b/xs/PangoRenderer.xs
@@ -21,6 +21,10 @@
 
 MODULE = Pango::Renderer	PACKAGE = Pango::Renderer	PREFIX = pango_renderer_
 
+=for object Pango::Renderer - a base class for pango rendering
+
+=cut
+
 BOOT:
 	PERL_UNUSED_VAR (file);
 
--- a/xs/PangoScript.xs
+++ b/xs/PangoScript.xs
@@ -47,6 +47,10 @@
 
 MODULE = Pango::Script	PACKAGE = Pango::Script	PREFIX = pango_script_
 
+=for object Pango::Script - identifies different writing systems
+
+=cut
+
 BOOT:
 	PERL_UNUSED_VAR (file);
 
@@ -68,6 +72,10 @@
 
 MODULE = Pango::Script	PACKAGE = Pango::ScriptIter	PREFIX = pango_script_iter_
 
+=for object Pango::ScriptIter - used to break a string of Unicode into runs by text
+
+=cut
+
 ##  Using gchar instead of char here all over the place to enforce utf8.
 
 ##  PangoScriptIter * pango_script_iter_new (const char *text, int length)
@@ -111,6 +119,10 @@
 
 MODULE = Pango::Script	PACKAGE = Pango::Language	PREFIX = pango_language_
 
+=for object Pango::Language - an object that represents a language tag
+
+=cut
+
 ##  gboolean pango_language_includes_script (PangoLanguage *language, PangoScript script)
 gboolean
 pango_language_includes_script (language, script)
--- a/xs/Pango.xs
+++ b/xs/Pango.xs
@@ -15,7 +15,12 @@
 
 # Don't doc these in Pango, or we'll clobber the main POD page!
 
-=for object Pango::version
+=for object Pango layout and render international text
+
+=cut
+
+=for object Pango::version - get and check the version of Pango that this was compiled against
+
 =cut
 
 =for see_also L<Gtk2::version>
--- a/xs/PangoMatrix.xs
+++ b/xs/PangoMatrix.xs
@@ -21,6 +21,10 @@
 
 MODULE = Pango::Matrix	PACKAGE = Pango::Matrix	PREFIX = pango_matrix_
 
+=for object Pango::Matrix - A structure specifying a transformation between user-space coordinates and device coordinates
+
+=cut
+
 double
 xx (matrix, new = 0)
 	PangoMatrix *matrix

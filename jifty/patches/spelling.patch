Description: spelling fixes
Origin: vendor
Forwarded: no
Author: gregor herrmann <gregoa@debian.org>
Last-Update: 2011-08-25

--- a/lib/Jifty/Action.pm
+++ b/lib/Jifty/Action.pm
@@ -491,7 +491,7 @@
         # It is in fact a form field for this action
 
         my $sticky = 0;
-        # $sticky can be overriden per-parameter
+        # $sticky can be overridden per-parameter
         if ( defined $field_info->{sticky} ) {
             $sticky = $field_info->{sticky};
         }
--- a/lib/Jifty/Manual/PageRegions.pod
+++ b/lib/Jifty/Manual/PageRegions.pod
@@ -199,7 +199,7 @@
 In this component we have one argument C<$collapsed> that controls either
 we show link or information. By default we prefer hidden state and in this
 case we show only the link with an C<onclick> action that refreshes the
-current region, however value of the argument is overriden.
+current region, however value of the argument is overridden.
 
 You can add any arguments you want to this component that may be required
 to show the additional information, for example an id of some object, but
--- a/lib/Jifty/Manual/Tutorial_zhtw.pod
+++ b/lib/Jifty/Manual/Tutorial_zhtw.pod
@@ -453,7 +453,7 @@
         $self->render_header();
         body {
 
-            # so that we dont show menu template here.
+            # so that we don't show menu template here.
 
             $self->render_pre_content_hook();
             $body_code->();
--- a/lib/Jifty/Plugin/ViewDeclarePage/Page.pm
+++ b/lib/Jifty/Plugin/ViewDeclarePage/Page.pm
@@ -31,7 +31,7 @@
 
 It's very hard to extended L<Jifty::View::Declare::Page> class as
 it's written in such a way that forces you to copy&paste some
-internals from the class to make overriden method work and don't
+internals from the class to make overridden method work and don't
 break things.
 
 I think this implementation is much better thing. To use this class
--- a/lib/Jifty/Manual/Models.pod
+++ b/lib/Jifty/Manual/Models.pod
@@ -60,7 +60,7 @@
 
 =back
 
-To get all these things done, Jifty allows to describe the schema
+To get all these things done, Jifty allows one to describe the schema
 definition in a simply comprehensible but powerful syntax that looks
 more like written text than a programming language. The schema
 definition is made inside the C<MyApp::Model::XXX::Schema> package and

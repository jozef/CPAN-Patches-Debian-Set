Description: fix whatis entries in manpages
Forwarded: no
Author: Ryan Niebur <ryan@debian.org>
Reviewed-by: gregor herrmann <gregoa@debian.org>

--- a/xs/GnomeVFSAddress.xs
+++ b/xs/GnomeVFSAddress.xs
@@ -22,6 +22,10 @@
 
 MODULE = Gnome2::VFS::Address	PACKAGE = Gnome2::VFS::Address	PREFIX = gnome_vfs_address_
 
+=for object Gnome2::VFS::Address - represents a DNS address
+
+=cut
+
 ##  GnomeVFSAddress *gnome_vfs_address_new_from_string (const char *address)
 GnomeVFSAddress_own *
 gnome_vfs_address_new_from_string (class, address)
--- a/xs/GnomeVFSApplicationRegistry.xs
+++ b/xs/GnomeVFSApplicationRegistry.xs
@@ -22,6 +22,10 @@
 
 MODULE = Gnome2::VFS::ApplicationRegistry	PACKAGE = Gnome2::VFS::ApplicationRegistry	PREFIX = gnome_vfs_application_registry_
 
+=for object Gnome2::VFS::ApplicationRegistry - registry for applications
+
+=cut
+
 SV *
 gnome_vfs_application_registry_new (class, app_id)
 	const char *app_id
@@ -67,6 +71,10 @@
 
 MODULE = Gnome2::VFS::ApplicationRegistry	PACKAGE = Gnome2::VFS::Application	PREFIX = gnome_vfs_application_registry_
 
+=for object Gnome2::VFS::Application - represents an application for the application registry
+
+=cut
+
 ##  gboolean gnome_vfs_application_registry_exists (const char *app_id) 
 gboolean
 gnome_vfs_application_registry_exists (app_id)
--- a/xs/GnomeVFSDNSSD.xs
+++ b/xs/GnomeVFSDNSSD.xs
@@ -146,6 +146,10 @@
 
 MODULE = Gnome2::VFS::DNSSD	PACKAGE = Gnome2::VFS::DNSSD	PREFIX = gnome_vfs_dns_sd_
 
+=for object Gnome2::VFS::DNSSD - network service discovery
+
+=cut
+
 ##  GnomeVFSResult gnome_vfs_dns_sd_browse (GnomeVFSDNSSDBrowseHandle **handle, const char *domain, const char *type, GnomeVFSDNSSDBrowseCallback callback, gpointer callback_data, GDestroyNotify callback_data_destroy_func)
 void
 gnome_vfs_dns_sd_browse (class, domain, type, func, data = NULL)
@@ -310,6 +314,10 @@
 
 MODULE = Gnome2::VFS::DNSSD	PACKAGE = Gnome2::VFS::DNSSD::Browse::Handle	PREFIX = gnome_vfs_dns_sd_browse_
 
+=for object Gnome2::VFS::DNSSD::Browse::Handle - used for browsing for services on the network
+
+=cut
+
 ##  GnomeVFSResult gnome_vfs_dns_sd_stop_browse (GnomeVFSDNSSDBrowseHandle *handle)
 GnomeVFSResult
 gnome_vfs_dns_sd_browse_stop (handle)
@@ -321,6 +329,10 @@
 
 MODULE = Gnome2::VFS::DNSSD	PACKAGE = Gnome2::VFS::DNSSD::Resolve::Handle	PREFIX = gnome_vfs_dns_sd_resolve_
 
+=for object Gnome2::VFS::DNSSD::Resolve::Handle - used for resolving services on the network
+
+=cut
+
 ##  GnomeVFSResult gnome_vfs_dns_sd_cancel_resolve (GnomeVFSDNSSDResolveHandle *handle)
 GnomeVFSResult
 gnome_vfs_dns_sd_resolve_cancel (handle)
--- a/xs/GnomeVFSAsync.xs
+++ b/xs/GnomeVFSAsync.xs
@@ -399,6 +399,10 @@
 
 MODULE = Gnome2::VFS::Async	PACKAGE = Gnome2::VFS::Async	PREFIX = gnome_vfs_async_
 
+=for object Gnome2::VFS::Async - handles asynchronous file operations
+
+=cut
+
 ##  void gnome_vfs_async_set_job_limit (int limit) 
 void
 gnome_vfs_async_set_job_limit (class, limit)
@@ -830,6 +834,10 @@
 
 MODULE = Gnome2::VFS::Async	PACKAGE = Gnome2::VFS::Async::Handle	PREFIX = gnome_vfs_async_
 
+=for object Gnome2::VFS::Async::Handle - handles asynchronous file operations
+
+=cut
+
 # void
 # DESTROY (handle)
 # 	GnomeVFSAsyncHandle *handle
--- a/xs/GnomeVFSFileInfo.xs
+++ b/xs/GnomeVFSFileInfo.xs
@@ -76,6 +76,10 @@
 
 MODULE = Gnome2::VFS::FileInfo	PACKAGE = Gnome2::VFS::FileInfo	PREFIX = gnome_vfs_file_info_
 
+=for object Gnome2::VFS::FileInfo - stores information about files, like stat
+
+=cut
+
 =for apidocs
 
 Creates a new GnomeVFSFileInfo object from I<hash_ref> for use with
--- a/xs/GnomeVFSDirectory.xs
+++ b/xs/GnomeVFSDirectory.xs
@@ -78,6 +78,10 @@
 
 MODULE = Gnome2::VFS::Directory	PACKAGE = Gnome2::VFS::Directory	PREFIX = gnome_vfs_directory_
 
+=for object Gnome2::VFS::Directory - represents a directory
+
+=cut
+
 =for apidoc
 
 Returns a GnomeVFSResult and a GnomeVFSDirectoryHandle.
@@ -252,6 +256,10 @@
 
 MODULE = Gnome2::VFS::Directory	PACKAGE = Gnome2::VFS::Directory::Handle	PREFIX = gnome_vfs_directory_
 
+=for object Gnome2::VFS::Directory::Handle - respresents a directory
+
+=cut
+
 =for apidoc
 
 Returns a GnomeVFSResult and a GnomeVFSFileInfo.
--- a/xs/GnomeVFSDrive.xs
+++ b/xs/GnomeVFSDrive.xs
@@ -38,6 +38,10 @@
 
 MODULE = Gnome2::VFS::Drive	PACKAGE = Gnome2::VFS::Drive	PREFIX = gnome_vfs_drive_
 
+=for object Gnome2::VFS::Drive - Container around Gnome2::VFS::Volume
+
+=cut
+
 ##  gulong gnome_vfs_drive_get_id (GnomeVFSDrive *drive)
 gulong
 gnome_vfs_drive_get_id (drive)
--- a/xs/GnomeVFSVolume.xs
+++ b/xs/GnomeVFSVolume.xs
@@ -51,6 +51,10 @@
 
 MODULE = Gnome2::VFS::Volume	PACKAGE = Gnome2::VFS::Volume	PREFIX = gnome_vfs_volume_
 
+=for object Gnome2::VFS::Volume - Abstraction for a mounted file system or a network location
+
+=cut
+
 ##  gulong gnome_vfs_volume_get_id (GnomeVFSVolume *volume)
 gulong
 gnome_vfs_volume_get_id (volume)
--- a/xs/GnomeVFSURI.xs
+++ b/xs/GnomeVFSURI.xs
@@ -22,6 +22,10 @@
 
 MODULE = Gnome2::VFS::URI	PACKAGE = Gnome2::VFS::URI	PREFIX = gnome_vfs_uri_
 
+=for object Gnome2::VFS::URI - uniform resource identifier
+
+=cut
+
 ##  GnomeVFSURI *gnome_vfs_uri_new (const gchar *text_uri)
 GnomeVFSURI_own *
 gnome_vfs_uri_new (class, text_uri)
--- a/xs/GnomeVFSVolumeMonitor.xs
+++ b/xs/GnomeVFSVolumeMonitor.xs
@@ -42,6 +42,10 @@
 
 MODULE = Gnome2::VFS::VolumeMonitor	PACKAGE = Gnome2::VFS::VolumeMonitor	PREFIX = gnome_vfs_volume_monitor_
 
+=for object Gnome2::VFS::VolumeMonitor - Monitors volume mounts and unmounts
+
+=cut
+
 #if !VFS_CHECK_VERSION (2, 8, 1)
 
 void
--- a/xs/GnomeVFSXfer.xs
+++ b/xs/GnomeVFSXfer.xs
@@ -84,6 +84,10 @@
 
 MODULE = Gnome2::VFS::Xfer	PACKAGE = Gnome2::VFS::Xfer	PREFIX = gnome_vfs_xfer_
 
+=for object Gnome2::VFS::Xfer - transfers stuff
+
+=cut
+
 # FIXME: these function names are UGLY.
 
 ##  GnomeVFSResult gnome_vfs_xfer_uri (const GnomeVFSURI *source_uri, const GnomeVFSURI *target_uri, GnomeVFSXferOptions xfer_options, GnomeVFSXferErrorMode error_mode, GnomeVFSXferOverwriteMode overwrite_mode, GnomeVFSXferProgressCallback progress_callback, gpointer data) 
--- a/xs/GnomeVFSResolve.xs
+++ b/xs/GnomeVFSResolve.xs
@@ -22,7 +22,8 @@
 
 MODULE = Gnome2::VFS::Resolve	PACKAGE = Gnome2::VFS	PREFIX = gnome_vfs_
 
-=for object Gnome2::VFS::Resolve
+=for object Gnome2::VFS::Resolve - address resolution
+
 =cut
 
 ##  GnomeVFSResult gnome_vfs_resolve (const char *hostname, GnomeVFSResolveHandle **handle)
@@ -43,6 +44,10 @@
 
 MODULE = Gnome2::VFS::Resolve	PACKAGE = Gnome2::VFS::Resolve::Handle	PREFIX = gnome_vfs_resolve_
 
+=for object Gnome2::VFS::Resolve::Handle - address resolution
+
+=cut
+
 void
 DESTROY (handle)
 	GnomeVFSResolveHandle *handle
--- a/xs/GnomeVFSMime.xs
+++ b/xs/GnomeVFSMime.xs
@@ -59,6 +59,10 @@
 
 MODULE = Gnome2::VFS::Mime	PACKAGE = Gnome2::VFS::Mime	PREFIX = gnome_vfs_mime_
 
+=for object Gnome2::VFS::Mime - functions for getting information about applications and components associated with MIME types
+
+=cut
+
 =for apidoc
 
 =for arg ... of GnomeVFSMimeApplication's
@@ -169,6 +173,10 @@
 
 MODULE = Gnome2::VFS::Mime	PACKAGE = Gnome2::VFS::Mime::Type	PREFIX = gnome_vfs_mime_
 
+=for object Gnome2::VFS::Mime::Type - represents a Mime type
+
+=cut
+
 SV *
 gnome_vfs_mime_new (class, mime_type)
 	const char *mime_type
@@ -500,6 +508,10 @@
 
 MODULE = Gnome2::VFS::Mime	PACKAGE = Gnome2::VFS::Mime::Application	PREFIX = gnome_vfs_mime_application_
 
+=for object Gnome2::VFS::Mime::Application - functions for getting information about applications and components associated with MIME types
+
+=cut
+
 void
 DESTROY (GnomeVFSMimeApplication *application)
     CODE:
@@ -619,6 +631,10 @@
 # --------------------------------------------------------------------------- #
 
 MODULE = Gnome2::VFS::Mime	PACKAGE = Gnome2::VFS::Mime::Monitor	PREFIX = gnome_vfs_mime_monitor_
+
+=for object Gnome2::VFS::Mime::Monitor - functions for getting information about applications and components associated with MIME types
+
+=cut
  
 ##  GnomeVFSMIMEMonitor *gnome_vfs_mime_monitor_get (void)
 GnomeVFSMIMEMonitor *
--- a/xs/GnomeVFSOps.xs
+++ b/xs/GnomeVFSOps.xs
@@ -213,6 +213,10 @@
 
 MODULE = Gnome2::VFS::Ops	PACKAGE = Gnome2::VFS::Handle	PREFIX = gnome_vfs_
 
+=for object Gnome2::VFS::Handle - basic file operations (read, write, etc)
+
+=cut
+
 ##  GnomeVFSResult gnome_vfs_close (GnomeVFSHandle *handle) 
 GnomeVFSResult
 gnome_vfs_close (handle)
@@ -482,6 +486,10 @@
 
 MODULE = Gnome2::VFS::Ops	PACKAGE = Gnome2::VFS::Monitor	PREFIX = gnome_vfs_monitor_
 
+=for object Gnome2::VFS::Monitor - Monitors volume mounts and unmounts
+
+=cut
+
 =for apidoc
 
 Returns a GnomeVFSResult and a GnomeVFSMonitorHandle.
@@ -518,6 +526,10 @@
 
 MODULE = Gnome2::VFS::Ops	PACKAGE = Gnome2::VFS::Monitor::Handle	PREFIX = gnome_vfs_monitor_
 
+=for object Gnome2::VFS::Monitor::Handle - Monitors volume mounts and unmounts
+
+=cut
+
 ##  GnomeVFSResult gnome_vfs_monitor_cancel (GnomeVFSMonitorHandle *handle) 
 GnomeVFSResult
 gnome_vfs_monitor_cancel (handle)
--- a/xs/GnomeVFSInit.xs
+++ b/xs/GnomeVFSInit.xs
@@ -22,7 +22,7 @@
 
 MODULE = Gnome2::VFS::Init	PACKAGE = Gnome2::VFS	PREFIX = gnome_vfs_
 
-=for object Gnome2::VFS::main
+=for object Gnome2::VFS::main - Filesystem Abstraction library
 
 =cut
 

Description: use an RPC::XML::ParserFactory
 Due to a backward-incompatible change in RPC::XML, we need to
 do this to get the server to work. Otherwise we have to use an
 old RPC::XML package
Author: Jonathan Yu <jawnsy@cpan.org>
Bug-CPAN: https://rt.cpan.org/Ticket/Display.html?id=50013
Origin: vendor
Forwarded: not-needed
--- a/lib/Catalyst/Plugin/Server/XMLRPC.pm
+++ b/lib/Catalyst/Plugin/Server/XMLRPC.pm
@@ -549,7 +549,7 @@
     use warnings;
 
     use RPC::XML;
-    use RPC::XML::Parser;
+    use RPC::XML::ParserFactory;
 
     use Data::Dumper;
     use Text::SimpleTable;
@@ -563,7 +563,7 @@
                                 ] );
 
     __PACKAGE__->mk_classdata( qw[_xmlrpc_parser]);
-    __PACKAGE__->_xmlrpc_parser( RPC::XML::Parser->new );
+    __PACKAGE__->_xmlrpc_parser( RPC::XML::ParserFactory->new );
 
     *parameters = *params;
 
--- a/t/002_live.t
+++ b/t/002_live.t
@@ -60,7 +60,7 @@
     ok( $res->is_success,       "   Response successfull 2XX" );
     is( $res->code, 200,        "   Reponse code 200" );
     
-    my $data = RPC::XML::Parser->new->parse( $res->content )->value->value;
+    my $data = RPC::XML::ParserFactory->new->parse( $res->content )->value->value;
     is_deeply( $data, $rv,     "   Return value as expected" );
 
     if( ref $data and UNIVERSAL::isa( $data, 'HASH' ) ) {
--- a/t/003_Settings.t
+++ b/t/003_Settings.t
@@ -44,7 +44,7 @@
     ok( $res->is_success,           "   Response successfull 2XX" );
     is( $res->code, 200,            "   Reponse code 200" );
     
-    my $data = RPC::XML::Parser->new->parse( $res->content )->value->value;
+    my $data = RPC::XML::ParserFactory->new->parse( $res->content )->value->value;
 
     ### general settings
     {   is( $data->{method}, $Method,
--- a/t/004_Attributes.t
+++ b/t/004_Attributes.t
@@ -70,7 +70,7 @@
     ### Check RPC
     {
         my $req = shoot($data->{rpc});
-        my $res = RPC::XML::Parser->new->parse( $req->content )->value->value;
+        my $res = RPC::XML::ParserFactory->new->parse( $req->content )->value->value;
         if (grep(/^rpc$/, @{$data->{valid}})) {
             ok(!$res->{faultString},  'Got RPC response on ' . $data->{rpc});
         } else {
--- a/t/030_Error_live.t
+++ b/t/030_Error_live.t
@@ -71,7 +71,7 @@
     ok( $res->is_success,       "   Response successfull 2XX" );
     is( $res->code, 200,        "   Reponse code 200" );
 
-    my $rv = RPC::XML::Parser->new->parse( $res->content )->value->value;
+    my $rv = RPC::XML::ParserFactory->new->parse( $res->content )->value->value;
     #is_deeply( $data, $rv,     "   Return value as expected" );
     is($rv->{faultString}, 'Invalid XMLRPC request: No such method', 'Got faultString "No such method"');
 }
@@ -79,7 +79,7 @@
 ### This content is NOT VALID xml check
 {
     my $res = shoot((keys %Methods)[0], 'bLegH');
-    my $data = RPC::XML::Parser->new->parse( $res->content )->value->value;
+    my $data = RPC::XML::ParserFactory->new->parse( $res->content )->value->value;
 
     if (UNIVERSAL::isa($data, 'HASH') && $data->{faultString}) {
         like($data->{faultString}, qr/Invalid XMLRPC request.*syntax error/s,'Got faultString "syntax error"');
--- a/t/040_faultcode.t
+++ b/t/040_faultcode.t
@@ -48,7 +48,7 @@
     ok( $res->is_success,       "   Response successfull 2XX" );
     is( $res->code, 200,        "   Reponse code 200" );
 
-    my $data = RPC::XML::Parser->new->parse( $res->content )->value->value;
+    my $data = RPC::XML::ParserFactory->new->parse( $res->content )->value->value;
     my ($rv_code,$rv_msg) = @$rv; 
     is_deeply( $data->{faultCode}, $rv_code,     "   Return value of faultCode as expected" );
     is_deeply( $data->{faultString}, $rv_msg,     "   Return value of faultString as expected" );

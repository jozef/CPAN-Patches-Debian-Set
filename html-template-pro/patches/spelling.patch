Description: fix spelling mistakes
Forwarded: no
Author: gregor herrmann <gregoa@debian.org>
Last-Update: 2010-05-23

--- a/lib/HTML/Template/PerlInterface.pod
+++ b/lib/HTML/Template/PerlInterface.pod
@@ -386,7 +386,7 @@
 keys in every hash it will find in "param" tree, which is sometimes 
 an expensive operation. To avoid this, set case_sensitive => 1.
 
-If case conversion is nessessary, there is an alternative lightweight 
+If case conversion is necessary, there is an alternative lightweight
 option tmpl_var_case, which is HTML::Template::Pro specific.
 
 Note that case_sensitive is wrapper-only option: it is not implemented 
@@ -540,7 +540,7 @@
 template tags.
 
 In the most simple usage, you simply assign a code reference to the
-filter parameter.  This subroutine will recieve a single argument - a
+filter parameter.  This subroutine will receive a single argument - a
 reference to a string containing the template file text.  Here is an
 example that accepts templates with tags that look like "!!!ZAP_VAR
 FOO!!!" and transforms them into HTML::Template tags:
@@ -630,7 +630,7 @@
       $self->param(PARAM => 'value');
 
       # with a subroutine reference that gets called to get the value
-      # of the scalar.  The sub will recieve the template object as a
+      # of the scalar.  The sub will receive the template object as a
       # parameter.
       $self->param(PARAM => sub { return 'value' });   
 
@@ -902,7 +902,7 @@
   HTML::Template::Expr->register_function(func_name => \&func_handler);
 
 You provide a subroutine reference that will be called during output.
-It will recieve as arguments the parameters specified in the template.
+It will receive as arguments the parameters specified in the template.
 For example, here's a function that checks if a directory exists:
 
   sub directory_exists {
@@ -982,7 +982,7 @@
 option to be set, whereas currently HTML::Template::Expr does.
 Anyway, this also will hopefully go away in a future version of 
 HTML::Template::Expr, so if you need global_vars in your templates 
-then you should set it explicitely.
+then you should set it explicitly.
 
 
 
--- a/lib/HTML/Template/Pro.pm
+++ b/lib/HTML/Template/Pro.pm
@@ -462,7 +462,7 @@
 of HTML::Template (as of 2.9) and HTML::Template::Expr (as of 0.0.7). 
 It is not intended to be a complete replacement, 
 but to be a fast implementation of HTML::Template if you don't need 
-quering, the extended facility of HTML::Template.
+querying, the extended facility of HTML::Template.
 Designed for heavy upload, resource limitations, abcence of mod_perl.
 
 HTML::Template::Pro has complete support of filters and HTML::Template::Expr's 
--- a/lib/HTML/Template/SYNTAX.pod
+++ b/lib/HTML/Template/SYNTAX.pod
@@ -282,7 +282,7 @@
 directly.  See below for more information on HTML_TEMPLATE_ROOT and
 the "path" option to new().
 
-As a protection against infinitly recursive includes, an arbitary
+As a protection against infinitly recursive includes, an arbitrary
 limit of 10 levels deep is imposed.  You can alter this limit with the
 "max_includes" option.  See the entry for the "max_includes" option
 below for more details.
@@ -607,7 +607,7 @@
 HTML::Template::Pro by Stanislav Yadykin <tosick at altlinux.ru>.
 Currently it is not included in official distribution of HTML::Template::Expr.
 
-Standart regexp syntax:
+Standard regexp syntax:
 
 =over 4
 
